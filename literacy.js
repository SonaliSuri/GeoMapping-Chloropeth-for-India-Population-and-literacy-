/*------------------------------------------------------------------------------------------------------------------------------------------------------
Define width and height
------------------------------------------------------------------------------------------------------------------------------------------------------*/
var w = 4000;
var h = 1625;

/*------------------------------------------------------------------------------------------------------------------------------------------------------
Define map projection
------------------------------------------------------------------------------------------------------------------------------------------------------*/
var projection = d3.geoMercator()
                   .scale([1200])
                   .translate([-1240, 1050]);


/*------------------------------------------------------------------------------------------------------------------------------------------------------
Define path generator
------------------------------------------------------------------------------------------------------------------------------------------------------*/
var path = d3.geoPath()
             .projection(projection);

/*------------------------------------------------------------------------------------------------------------------------------------------------------
Create SVG element
------------------------------------------------------------------------------------------------------------------------------------------------------*/
var svg = d3.select("body")
            .append("svg")
            .attr("width", w)
            .attr("height", h);

/*------------------------------------------------------------------------------------------------------------------------------------------------------
Define tooltip
------------------------------------------------------------------------------------------------------------------------------------------------------*/
var tooltip = d3.select("body").append("div")
.attr("class", "tooltip")
.style("opacity", 0)
.classed("hidden", true);

/*------------------------------------------------------------------------------------------------------------------------------------------------------
Define colors
------------------------------------------------------------------------------------------------------------------------------------------------------*/
var color = d3.scaleQuantize()
.range(['rgb(247,251,255)','rgb(222,235,247)','rgb(198,219,239)','rgb(158,202,225)','rgb(107,174,214)','rgb(66,146,198)','rgb(33,113,181)','rgb(32,110,166)','rgb(31,60,100)','rgb(8,29,88)']);


/*------------------------------------------------------------------------------------------------------------------------------------------------------
Load literacy.csv
------------------------------------------------------------------------------------------------------------------------------------------------------*/
     d3.csv("literacy.csv").then(function(literacycsv) {
    
    
/*------------------------------------------------------------------------------------------------------------------------------------------------------
Store data in stateData
------------------------------------------------------------------------------------------------------------------------------------------------------*/
  var literacydata = [];
        for(var i = 0; i < literacycsv.length; i++){
            literacydata.push({region:literacycsv[i].Region,
                             literacy:literacycsv[i].Literacy});
        }
/*------------------------------------------------------------------------------------------------------------------------------------------------------
Load json data
------------------------------------------------------------------------------------------------------------------------------------------------------*/
      d3.json("INDIA.geojson").then(function(json) {
            console.log(json);
        literacydata.forEach(function(region, i){
            var dataRegionName = region.region;
            var dataLiteracy = parseFloat(region.literacy);
           
 /*------------------------------------------------------------------------------------------------------------------------------------------------------
Find correct feature in json (statename) and assign correct density value from csv based on state name
------------------------------------------------------------------------------------------------------------------------------------------------------*/
            for (var j = 0; j < json.features.length; j++){
                var jsonRegionName = json.features[j].properties.NAME_1;
                console.log(jsonRegionName);
                console.log(dataRegionName);
                if(dataRegionName == jsonRegionName){
                    console.log("Yes");
                    console.log(json.features[j].properties.name);
                    json.features[j].properties.literacy = dataLiteracy;
                    break;
                }
            }
        })  
            console.log(literacydata);
            console.log(json);
/*------------------------------------------------------------------------------------------------------------------------------------------------------
Bind data and create one path per GeoJSON feature
------------------------------------------------------------------------------------------------------------------------------------------------------*/
        svg.selectAll("path")
                    .data(json.features)
                    .enter()
                    .append("path")
                    .attr("d", path)
                    .style("stroke", "black")
                   
/*------------------------------------------------------------------------------------------------------------------------------------------------------
Mouseover and mouseout events for tooltips
------------------------------------------------------------------------------------------------------------------------------------------------------*/                        .on("mouseover", function(d){
                        tooltip.transition()		
                        .duration(1)
                        .style("opacity", .9);		
                        tooltip .html(d.properties.NAME_1 + "<br>" + "Literacy rate: " + +d.properties.literacy.toFixed(2) + " %")          
                        .style("left", (d3.event.pageX + 10) + "px")
                        .style("top", (d3.event.pageY - 28) + "px");	
		 
            
			       })
			       .on("mouseout", function() {
/*------------------------------------------------------------------------------------------------------------------------------------------------------
Hide tooltip on mouseout
------------------------------------------------------------------------------------------------------------------------------------------------------*/
                    tooltip.transition()		
					.duration(1)		
					.style("opacity", 0)
                    .style("left", (d3.event.pageX + 10) + "px")
					.style("top", (d3.event.pageY - 28) + "px");
			       })
                
                
                    .style("fill", function(d){
/*------------------------------------------------------------------------------------------------------------------------------------------------------
Fill colors based on literacy. lover the literacy lighter the color.
------------------------------------------------------------------------------------------------------------------------------------------------------*/
  
                        var literacy = d.properties.literacy;

                        if(!literacy){
                            return '#ccc';
                        }
                        if(literacy < 60){
                            return 'rgb(247,251,255)';
                        }
                        else if (literacy < 70){
                            return 'rgb(222,235,247)';
                        }
                        else if (literacy < 75){
                            return 'rgb(198,219,239)';
                        }
                        else if (literacy < 78){
                            return 'rgb(158,202,225)';
                        }
                        else if (literacy < 80){
                            return 'rgb(107,174,214)';
                        }
                        else if (literacy < 85){
                            return 'rgb(66,146,198)';
                        }
                        else if (literacy < 88){
                            return 'rgb(33,113,181)';
                        }
                        else if (literacy < 90){
                            return 'rgb(32,110,166)';
                        }
                        else if (literacy < 92){
                            return 'rgb(31,60,100)';
                        }
                        else{
                            return "rgb(8,29,88)";
                        }
                    }); 
		
                    console.log(json.features);
            
            
/*------------------------------------------------------------------------------------------------------------------------------------------------------
Legends for colors
------------------------------------------------------------------------------------------------------------------------------------------------------*/
             var legend = d3.select('svg')
                       .append('g')
                       .selectAll('g')
                       .data(color.range())
                       .enter()
                       .append('g')
                       .attr('class', 'legend')
                       .text("hi there")
                       .attr('transform', function(d, i){
                           var height = 30;
                           var x = 700;
                           var y = i * height;
                           return 'translate(' + x + ',' + (y + 40) + ')';
                       });
/*------------------------------------------------------------------------------------------------------------------------------------------------------
Appending a rectangle for each color
------------------------------------------------------------------------------------------------------------------------------------------------------*/

            legend.append('rect')
                    .attr('width', 20)
                    .attr('height', 20)
                    .style('fill', function(d){ return d; })
                    .style('stroke', color);
            legend.append('text')
                    .attr('x', 25)
                    .attr('y', 16)
                    .text(function(d, i){ 
                   var ranges = ["0-60", "61-70", "71-75", "76-78", "79-80", "81-85", "86-88", "89-90", "91-92", ">=92"];
                        return ranges[i] + "   %";
                    });
        });
  
});

            
			